namespace SchoolCalendar
{
    internal static class Program
    {
        static void Report(Child[] children, SchoolSystem school)
        {
            // Example of foreach loop:
            foreach (Child child in children)
            {
                Console.WriteLine(child + " starts school on " + school.GetBeginning(child) +
                ", celebrates on " + child.GetFirstCelebrationAt(school));
            }
            // exmple of wgile loop:
            int offset = 0;
            while (offset < children.Length)
            {
                Console.WriteLine(child + " starts school on " + school.GetBeginning(child) +
                ", celebrates on " + child.GetFirstCelebrationAt(school));
                offset += 1;
            }
            // Example of for loop:
            for (int offset = 0; offset < children.Length; offset++)
            {
                Console.WriteLine(child + " starts school on " + school.GetBeginning(child) +
                ", celebrates on " + child.GetFirstCelebrationAt(school));
            }

            // Initial report statement:
            Console.WriteLine(
                child + " starts school on " + school.GetBeginning(child) + 
                ", celebrates on " + child.GetFirstCelebrationAt(school));
        }

        static void Demonstrate(Calendar cal)
        {
            var school =
                new SchoolSystem(cal.Create(3, 1), 5, cal.Create(8, 15));

            Report(new Child[0], school);

            Child[] children = new Child[]
            {
                new Child("Jill", cal.Create(2008, 2, 29)),
                new Child("Jake", cal.Create(2007, 8, 27)),
                new Child("Jimmy", cal.Create(2008, 1, 31)),
                new Child("Jane", cal.Create(2009, 4, 22)),
                new Child("John", cal.Create(2007, 11, 14))
            };

            Console.WriteLine("Using " + cal.GetName() + " calendar:");
            Report(children, school);
            Console.WriteLine();
        }
        static void Main()
        {
            Calendar[] calendars = new Calendar[]
            {
                new GregorianCalendar(),
                new JulianCalendar()
            };
            
            foreach (Calendar calendar in calendars)
            {
                Demonstrate(calendar);
            }
            //Demonstrate(new GregorianCalendar());
            //Demonstrate(new JulianCalendar());
            Console.ReadLine();
        }
    }
}